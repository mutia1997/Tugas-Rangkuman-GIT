GIT - INTRODUCTION
--------------------------
Apa itu GIT ?
GIT adalah salah satu version control system yang diciptakan oleh Linus Torvalds
GIT mencatat setiap perubahan file di code atau sourcode kita

Manfaat
Bisa menyimpan seluruh versi source code
Berkolaborasi membangun sistem jadi mudah
Bisa berkontribusi di proyek open source
Memudahkan dalam tracking perubahan
Memahami cara deploy modern
Dsb

Kapan dibutuhkan
Saat ingin membangun sistem dengan berkolaborasi
Membuat versi dari sistem
Backup sour code
Berkolaborasi dengan programmer dunia


GIT - FUNDAMENTAL
--------------------------
Perintah perintah dasar yang sering dilakukan untuk mengoperasikan GIT :
* Git init      : Digunakan untuk menginisialisasi repository
                  Atau memberi tahu folder saat ini akan dijadikan repository
                  Kita tidak bisa menggunakan git tanpa menginisialisasinya
* Git config    : Konfigurasi email dan username
                  Biasanya disamakan dengan akun gitlab / github
                  Config global untuk konfigurasi ke server
                  Config local untuk konfigurasi local
                  Untuk melihat semua konfigurasi yang ada di git bisa menggunakan perintah "git config --list" 
* Git status    : Digunakan untuk mengetahui status file
                  Status file secara umum ada 3. Untracked, staging area, modified
* Git add       : Untuk memasukan file ke staging area
* Git commit    : Untuk mencatat perubahan yang dilakukan
* Git log       : Untuk melihat riwayat commit
                  Tekan q untuk keluar dari log
* Git clone     : Digunakan untuk mengcopy repo dari server
* Git remote    : Semacam api untuk berinteraksi dari client dengan server
* Git push      : Untuk mengirimkan commit ke server
* Git pull      : Untuk mengambil commit dari server jika ada perubahan di server yang dibuat oleh branch lain



GIT - BRANCH
--------------------------
Git Branch adalah cabang / copyan dari repo 

Manfaat Git Branch :
Parallel development
Bisa digunakan untuk memanajemen pengembangan. Misal test branch, unstable branch, stable branch

Kapan dibutuhkan :
Saat mengembangakan fitur baru

Perintah perintah untuk mengoperasikan Git Branch :
Git branch: melihat semua branch (local)
Git branch --all: melihat semua branch (public)
Git branch nama_branch: membuat branch baru
Git checkout nama_branch: untuk berpindah branch
Git branch -d nama_branch: untuk menghapus branch
Git merge nama_branch : untuk menggabungkan commit dari 2 branch
                        Relatif terhadap branch yang aktif saat ini
                        Untuk melakukan merge harus dipastikan tidak ada file yang belum di commit

Conflict antar branch atau dengan master :
Conflict adalah kondisi yang terjadi ketika merging 2 branch yang memiliki perubahan pada file yang sama
Ketika conflict, kita tidak bisa melakukan commit
Untuk melakukan commit, conflict harus diselesaikan dulu.



GIT - GUI TOOLS
--------------------------
Salah satu contoh GUI Tools untuk memudahkan dalam mengoperasikan git adalah Sourcetree App.

Manfaat :
Mudah digunakan
Solving conflict jadi lebih mudah
Mempercepat kinerja
Kapan dibutuhkan
Setiap saat

Sebelum menggunakannya pastikan install diffmerge dulu untuk penyelesaian conflict.


